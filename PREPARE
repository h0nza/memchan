# -*- tcl -*-
# prepare module MEMCHAN for distribution
# CVS:	$Id: PREPARE,v 1.19 1999/07/27 21:25:11 aku Exp $

# Exclude older binary distributions, they are made available through the 1.9 site.

mExclude \
	win/bdist/cygwin.jan.19.1 \
	win/bdist/cygwin.jan.19.2 \
	win/bdist/vc6.ak.19.1     \
	unix/bdist/ak.1           \
	unix/bdist/ak.2           \
	unix/bdist/ak.3



# O. insert various information into some files
#    (version, patchlevel, current date)

mExclude LSM ANNOUNCE

eval mInsertInfo \
	DESCRIPTION doc/manual \
	README win/README win/README.VC mac/README \
	unix/configure.in unix/Makefile.in \
	[glob win/makefile.vc*] win/Makefile.gnu win/mc.rc \
	[glob doc/nodes/*.node] [glob doc/nodes/*.def]

mGetDescription
mExpandUrls
mGenerateLSM
mGenerateANNOUNCE

package require MSA
mGenerateAnnounceMail tcl-announce@mitchell.org lvirden@cas.org
mSupport    AMAIL
file delete AMAIL

#file copy unix/pkgIndex.tcl.in win/pkgIndex.tcl

set mInfo(@configure_input@)  "Distributed at $mDate"
set mInfo(@MEMCHAN_VERSION@)  $mVersion
#set mInfo(@MC_USING_STUBS@)   1 ; # implicit usage on Win*
set mInfo(@MEMCHAN_LIB_FILE@) memchan${mShortDosVersion} ; # .dll added by index file itself
#                             ~~~~~ coordinate with win/makefile.*
mInsertInfo win/pkgIndex.tcl

# remove internal directories

mExclude patches mails

# generate configure script to be used
mConfigure unix

# Integrate tk-based testsuite interface.

exec makedist tg
exec tar xfz [glob tg*.tar.gz]
eval file delete \
	[glob tg*.README] [glob tg*.ANNOUNCE] \
	[glob tg*.LSM] [glob tg*.tar.gz] \
	[glob tg*.DESCRIPTION]

eval file rename [glob tg*] testlib

# Now generate documentation for linkage into my
# site and standalone distribution

#mHandleBinaryDistributions
mHandleBinaryDistributions doc/license.terms README

# -up-man assumes that the document is part of the
# hierarchy at http://www.oche.de/~akupries
# It resides at '~akupries/soft/setops/index.html'
# The tcltk page is '~akupries/tcltk.html'

cd doc
file mkdir html html/img

mLog info generating documentation tree

exec nodeCompile westend html nodes 

cd ..
mDocTGZArchive doc/html
mDocZIPArchive doc/html
cd doc

eval file delete -force [glob html/*.html]

file delete -force nodes/a_up.def
exec nodeCompile     plain html              nodes
exec nodeMakeSitemap plain html memchan_home nodes

mExclude nodes manual INSTALL
cd ..


# create the file required by the NeoSoft CSA
file copy ChangeLog.short CHANGES
