# -*- tcl -*-
# external urls used here

proc url {code text url} {
    # defines link *and* shortcut procedure for access to it.

    link $code $text $url
    proc $code {} "return \[link $code\]"
}

# -------------------------------------------------

url tcl        [lang tcl]               http://www.scriptics.com/
url scriptics  Scriptics                http://www.scriptics.com/
url consortium "Tcl/Tk Consortium"      http://www.tclconsortium.org/
url tea        "TEA"               http://www.scriptics.com/products/tcltk/tea/
url cygnus     Cygnus                   http://www.cygnus.com/
url cygwin     CygWin                   http://www.cygnus.com/cygwin

url tclwiki	"Tcl'ers Wiki"	"http://purl.org/thecliff/tcl/wiki/"

url Trf       "Trf"         http://www.oche.de/~akupries/soft/trf/
url Trfcrypt  "Trfcrypt"    http://www.oche.de/~akupries/soft/trfcrypt/
url memchan19       "version 1.9" http://www.oche.de/~akupries/soft/memchan1.9/
url memchan_bdist19 "Memchan 1.9 binary distributions" http://www.oche.de/~akupries/soft/memchan1.9/memchan_bdist.html

# -------------------------------------------------

set base http://www.oche.de/~akupries/soft/memchan/download

link memchan_src_tbz  {Sources, Unix, bzip2'ed Tar} \
	${base}/memchan@mFullVersion@.tar.bz2

link memchan_src_tgz  {Sources, Unix, gzipped Tar} \
	${base}/memchan@mFullVersion@.tar.gz

link memchan_src_zip  {Sources, Win*}   ${base}/memchan@mFullVersion@.zip
link memchan_readme   README            ${base}/memchan@mFullVersion@.README

#link memchan_win32    {Binary distribution, WinNT, Tcl 8.0} ${base}/mchan@mDosVersion@b.zip

unset base

# -------------------------------------------------

if {[info exists ::westend]} {
} else {
}

if {0} {
    link	memchan	"download" "soft/memchan/memchan1.7.tar.gz"
    link	mc_src	"Source"   "soft/memchan/mchan17.zip"
    link	mc_bin	"binary"   "soft/memchan/mchan17b.zip"
}
