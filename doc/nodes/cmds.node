# -*- tcl -*-
# commands in the extension

node memchan_cmds {
    title       "Memchan: Commands"
    shortTitle  "Commands"
    description "Description of the provided commands"
    parent      memchan_home

    contents {
	p "This extension provides two new commands and influences the
	kernel command [cmd fconfigure].
	"

	cmdtable {::} {
	    cmdrow  memchan {} {
		p "
		Command to create a new memory channel. Returns the handle
		of the created channel. Accepts a single option, '-initial-size'.
		The argument to the option is a number, it specifies the number
		of bytes to pre-allocate for the internal buffers.
		"
	    }
	    cmdrow  fifo {} {
		p "
		Command to create a new memory channel with fifo
		characteristics. No arguments, no options. Returns the
		handle of the created channel.
		"
		p "The introduction already told us that these channels are
		useful to transfer large amounts of data between procedures
		or interpreters. The difference is this: [strong memchan]s are
		block-oriented, [strong fifo]s on the other hand are
		stream-oriented. With a [cmd memchan] the producer fills the
		memory channel with the relevant data and then transfers
		control to the consumer. With a [cmd fifo] producer and
		consumer may work in parallel. This is currently only possible
		for an event-driven application, but the moment additional
		interfaces come up, allowing me to transfer a channel between
		threads this concept may find its real use for inter-thread
		communication of bulk information; whose transfer through the
		currently implemented send-oriented interface (see
		[afile tclTestThread.c]) is awkward. [cmd fifo]s complement
		this interface, they don't replace it.
		"
	    }
	    cmdrow fconfigure {... -length -allocated ...} {
		p "Memory and fifo channels support a two read-only options,
		[opt -length] and [opt -allocated]. Reading the first via
		[cmd fconfigure] retrieves the number of bytes currently stored
		in the channel. Reading the second retrieves the number of bytes
		currently allocated by the internal buffers. This number is
		usually greater than the one reported by [opt -length], but
		never smaller.
		"
	    }
	}
    }
}
